% NBPSO code v1.0
% Generated by Majid Rostami Shahrbabaki, 2010. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5
% Particle swarm optimization (PSO) is one of the modern heuristic algorithms that can be applied to continuous and discrete optimization problems.
% The original binary PSO (BPSO) has got some disadvantages that make the algorithm not to converge well.
% To deal with these disadvantages, a new BPSO (NBPSO) is introduced. The results provided in the following papers show the superiority of the NBPSO.
% 
% [1]. M.Rostami Shahrbabak and H.Nezamabadi-pour, " A New Approach to Binary PSO Algorithm" 14th Iranian Conference on Electrical Engineering, may 2006.
% [2]. H.Nezamabadi-pour, M.Rostami Shahrbabaki and M.Maghfoori Farsangi "Binary Particle Swarm Optimization: Challenges and new
% Solutions"The CSI Journal on Computer Science and Engineering Vol. 6, No. 1 (a), pp. 21-32, 2008.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Main function for NBPSO algorithm. The function called here are :
% initialize : gives the initial parameters
% range_func : depend on the Num_func, determines ranges for position and velocity
% evaluate : depend on the Num_func, evaluates the function
% renewp_best : finds the Particle_best
% renewg_best : finds the Global_best
% update_v_p  : updates position and velocities of particles
% display_result : displays the results

clear,close all,clc  %#ok<DUALC>
for j = 1:50
    [N,K,D,L,var,w_max,w_min,c1,c2,position,p_best,g_best,fitness,p_best_fit,...
        Num_func,Min_Max_flag,Gl_Lo_flag] = initialize;
    [v_max,x_max,velocity,] = range_func(Num_func,N,D) ;
    for k=1:K
        w = w_max+(((w_min-w_max)*(k-1))/(K-1));
        fitness = evaluate(position,k,N,D,L,var,x_max,fitness,Num_func);
        [p_best,p_best_fit] = renewp_best(D,fitness,p_best,N,k,position,p_best_fit,Min_Max_flag);
        g_best=renewg_best(p_best,p_best_fit,N,Min_Max_flag,Gl_Lo_flag);
        [position,velocity]=update_v_p(D,N,c1,c2,w,p_best,g_best,position,velocity,v_max,Gl_Lo_flag);
    end
    if Min_Max_flag == 1
        best_fit(j,:) = min(fitness);   %#ok<SAGROW> 
    else
        best_fit(j,:) = min(fitness); %#ok<SAGROW>
    end
    mean_fit(j,:) = mean(fitness); %#ok<SAGROW>
    disp([' End of run ' , num2str(j) , '   ==> Total run is 50'])
end
display_result(best_fit,mean_fit,K,Min_Max_flag)




